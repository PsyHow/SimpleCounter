{"version":3,"sources":["App.module.css","BLL/actionCreators.ts","Components/Input.tsx","Components/Button.tsx","Components/CounterSettings/SettingsCounter.tsx","Components/CounterSettings/SettingsCounterContainer.tsx","Components/Counter/Counter.tsx","Components/Counter/CounterContainer.tsx","App.tsx","reportWebVitals.ts","BLL/counterReducer.ts","BLL/redux.ts","index.tsx","Components/CounterSettings/SettingsCounter.module.css","Components/Counter/Counter.module.css"],"names":["module","exports","ACTIONS_TYPE","Input","props","className","type","value","onChange","Button","onClick","disabled","title","SettingsCounter","onChangeMin","onChangeMax","disableButton","setValues","min","useSelector","state","counter","valueMin","max","valueMax","error","styles","settingsBox","inputBox","inputError","input","button","setCounterValueAC","SET_COUNTER_VALUE","setErrorAC","SET_ERROR","SettingsCounterContainer","dispatch","useDispatch","useEffect","valueAsString","localStorage","getItem","JSON","parse","SET_MIN_VALUE","SET_MAX_VALUE","setItem","stringify","e","target","minValue","Number","CHANGE_MIN_VALUE","maxValue","CHANGE_MAX_VALUE","Counter","incNumberHandler","resetInc","dis","counterBox","ErrorH","Er","h","counterButton","cButton","CounterContainer","typeString","INC_COUNTER_VALUE","App","s","wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","Store","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5bc3ab66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__Jo-Ep\"};","export enum ACTIONS_TYPE {\r\n    CHANGE_MIN_VALUE = 'CHANGE-MIN-VALUE',\r\n    CHANGE_MAX_VALUE = 'CHANGE-MAX-VALUE',\r\n    SET_COUNTER_VALUE = 'SET-COUNTER-VALUE',\r\n    INC_COUNTER_VALUE = 'INC-COUNTER-VALUE',\r\n    SET_MIN_VALUE = 'SET-MIN-VALUE',\r\n    SET_MAX_VALUE = 'SET-MAX-VALUE',\r\n    SET_ERROR = 'SET-ERROR',\r\n}\r\n\r\nexport const changeValueMinAC = (value: number) => {\r\n    return {type: ACTIONS_TYPE.CHANGE_MIN_VALUE, value} as const\r\n}\r\nexport const changeValueMaxAC = (value: number) => {\r\n    return {type: ACTIONS_TYPE.CHANGE_MAX_VALUE, value} as const\r\n}\r\nexport const setCounterValueAC = (value: number | string) => {\r\n    return {type: ACTIONS_TYPE.SET_COUNTER_VALUE, value} as const\r\n}\r\nexport const incCounterValueAC = () => {\r\n    return {type: ACTIONS_TYPE.INC_COUNTER_VALUE} as const\r\n}\r\nexport const setValueMinAC = (value: number) => {\r\n    return {type: ACTIONS_TYPE.SET_MIN_VALUE, value} as const\r\n}\r\nexport const setValueMaxAC = (value: number) => {\r\n    return {type: ACTIONS_TYPE.SET_MAX_VALUE, value} as const\r\n}\r\nexport const setErrorAC = (value: string | boolean) => {\r\n    return {type: ACTIONS_TYPE.SET_ERROR, value} as const\r\n}\r\n\r\nexport type ChangeValueMaxType = ReturnType<typeof changeValueMaxAC>\r\nexport type ChangeValueMinType = ReturnType<typeof changeValueMinAC>\r\nexport type SetCounterValueType = ReturnType<typeof setCounterValueAC>\r\nexport type IncCounterValueType = ReturnType<typeof incCounterValueAC>\r\nexport type SetValueMinType = ReturnType<typeof setValueMinAC>\r\nexport type SetValueMaxType = ReturnType<typeof setValueMaxAC>\r\nexport type SetErrorType = ReturnType<typeof setErrorAC>\r\n\r\nexport type ActionType = ChangeValueMinType\r\n    | ChangeValueMaxType\r\n    | SetCounterValueType\r\n    | IncCounterValueType\r\n    | SetValueMinType\r\n    | SetValueMaxType\r\n    | SetErrorType\r\n","import React, {ChangeEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    className: string\r\n    value: number\r\n    onChange?:(e: ChangeEvent<HTMLInputElement>)=>void\r\n}\r\n\r\nexport const Input = (props:InputPropsType) => {\r\n\r\n    return (\r\n        <input className={props.className} type={\"number\"} value={props.value}\r\n               onChange={props.onChange}/>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    className: string\r\n    onClick: () => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    return (\r\n        <button\r\n            className={props.className}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}>{props.title}</button>\r\n    )\r\n}\r\n\r\n","import {Input} from \"../Input\";\r\nimport {Button} from \"../Button\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport styles from './SettingsCounter.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../BLL/redux\";\r\n\r\ntype PropsType = {\r\n    setValues: () => void\r\n    onChangeMin: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeMax: (e: ChangeEvent<HTMLInputElement>) => void\r\n    disableButton: boolean\r\n}\r\n\r\nexport const SettingsCounter = (props: PropsType) => {\r\n\r\n    const {\r\n        onChangeMin,\r\n        onChangeMax,\r\n        disableButton,\r\n        setValues,\r\n    } = props\r\n\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n\r\n    return (\r\n        <div className={styles.settingsBox}>\r\n            <div className={styles.inputBox}>\r\n                MinValue\r\n                <Input className={error ? styles.inputError : styles.input}\r\n                       value={min}\r\n                       onChange={onChangeMin}/>\r\n            </div>\r\n            <div className={styles.inputBox}>\r\n                MaxValue\r\n                <Input className={error ? styles.inputError : styles.input}\r\n                       value={max}\r\n                       onChange={onChangeMax}/>\r\n            </div>\r\n            <div>\r\n                <Button title={'set'}\r\n                        className={styles.button}\r\n                        disabled={disableButton}\r\n                        onClick={setValues}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {SettingsCounter} from \"./SettingsCounter\";\r\nimport React, {ChangeEvent, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    changeValueMaxAC,\r\n    changeValueMinAC,\r\n    setCounterValueAC,\r\n    setErrorAC,\r\n    setValueMaxAC,\r\n    setValueMinAC\r\n} from \"../../BLL/actionCreators\";\r\nimport {AppStateType} from \"../../BLL/redux\";\r\n\r\n\r\nexport const SettingsCounterContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n\r\n    useEffect(() => {\r\n        const valueAsString = localStorage.getItem('minValue')\r\n        if (valueAsString) {\r\n            const min = JSON.parse(valueAsString)\r\n            dispatch(setValueMinAC(min))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const valueAsString = localStorage.getItem('maxValue')\r\n        if (valueAsString) {\r\n            const max = JSON.parse(valueAsString)\r\n            dispatch(setValueMaxAC(max))\r\n        }\r\n    }, [])\r\n\r\n    const setValues = () => {\r\n        localStorage.setItem('minValue', JSON.stringify(min))\r\n        localStorage.setItem('maxValue', JSON.stringify(max))\r\n        dispatch(setCounterValueAC(min))\r\n    }\r\n\r\n    const onChangeMin = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const min = e.target.value\r\n        const minValue = Number(min)\r\n        dispatch(changeValueMinAC(minValue))\r\n        dispatch(setCounterValueAC('Set Value'))\r\n        if (minValue >= max) {\r\n            dispatch(setErrorAC('Incorrect Value'))\r\n        } else {\r\n            dispatch(setErrorAC(false))\r\n        }\r\n    }\r\n    const onChangeMax = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const max = e.target.value\r\n        const maxValue = Number(max)\r\n        dispatch(changeValueMaxAC(maxValue))\r\n        dispatch(setCounterValueAC('Set Value'))\r\n        if (maxValue <= min) {\r\n            dispatch(setErrorAC('Incorrect Value'))\r\n        } else {\r\n            dispatch(setErrorAC(false))\r\n        }\r\n    }\r\n\r\n    const disableButton = min >= max\r\n\r\n    return <>\r\n        <SettingsCounter setValues={setValues}\r\n                         onChangeMin={onChangeMin}\r\n                         onChangeMax={onChangeMax}\r\n                         disableButton={disableButton}/>\r\n    </>\r\n}\r\n\r\n","import {Button} from \"../Button\";\r\nimport React from \"react\";\r\nimport styles from './Counter.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../BLL/redux\";\r\n\r\ntype PropsType = {\r\n    incNumberHandler: () => void\r\n    resetInc: () => void\r\n    dis: boolean\r\n}\r\n\r\nexport const Counter = (props: PropsType) => {\r\n\r\n    const {incNumberHandler, resetInc, dis} = props\r\n\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n    const counter = useSelector<AppStateType, number | string>(state => state.counter.counter)\r\n\r\n    const typeString = 'string'\r\n\r\n\r\n    return (\r\n        <div className={styles.counterBox}>\r\n            <div className={styles.counter}>\r\n                <div>\r\n\r\n                    {\r\n                        error ? <div className={styles.ErrorH}>{error}</div>\r\n                            : <div className={counter >= max ? styles.Er : styles.h}>{counter}</div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.counterButton}>\r\n                <Button title={\"Inc\"}\r\n                        className={styles.cButton}\r\n                        onClick={incNumberHandler}\r\n                        disabled={dis}/>\r\n                <Button title={\"RESET\"}\r\n                        className={styles.cButton}\r\n                        onClick={resetInc}\r\n                        disabled={!!error || (typeof (counter) === typeString)}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {incCounterValueAC, setCounterValueAC,} from \"../../BLL/actionCreators\";\r\nimport {Counter} from \"./Counter\";\r\nimport React from \"react\";\r\nimport {AppStateType} from \"../../BLL/redux\";\r\n\r\nexport const CounterContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const counter = useSelector<AppStateType, number | string>(state => state.counter.counter)\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n    const typeString = 'string'\r\n\r\n    const incNumberHandler = () => {\r\n        if ((typeof counter) !== typeString)\r\n            dispatch(incCounterValueAC())\r\n    }\r\n\r\n    const resetInc = () => {\r\n        if ((typeof counter) !== typeString)\r\n            dispatch(setCounterValueAC(min))\r\n    }\r\n\r\n    const dis = !!error || counter === max || (typeof (counter) === typeString)\r\n\r\n\r\n    return <>\r\n        <Counter incNumberHandler={incNumberHandler}\r\n                 resetInc={resetInc}\r\n                 dis={dis}/>\r\n    </>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport {SettingsCounterContainer} from \"./Components/CounterSettings/SettingsCounterContainer\";\nimport s from './App.module.css'\nimport {CounterContainer} from \"./Components/Counter/CounterContainer\";\n\nfunction App() {\n\n    return (\n        <div className={s.wrapper}>\n            <SettingsCounterContainer/>\n            <CounterContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ACTIONS_TYPE, ActionType} from \"./actionCreators\";\r\n\r\nexport type InitialStateType = {\r\n    counter: number | string,\r\n    valueMin: number,\r\n    valueMax: number,\r\n    error: boolean | string\r\n}\r\n\r\nconst initialState = {\r\n    counter: 'Press Set',\r\n    valueMin: 0,\r\n    valueMax: 0,\r\n    error: ''\r\n}\r\n\r\nexport const CounterReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.CHANGE_MIN_VALUE:\r\n        case ACTIONS_TYPE.SET_MIN_VALUE:\r\n            return {...state, valueMin: action.value}\r\n        case ACTIONS_TYPE.CHANGE_MAX_VALUE:\r\n        case ACTIONS_TYPE.SET_MAX_VALUE:\r\n            return {...state, valueMax: action.value}\r\n        case ACTIONS_TYPE.SET_COUNTER_VALUE:\r\n            return {...state, counter: action.value}\r\n        case ACTIONS_TYPE.INC_COUNTER_VALUE:\r\n            return {...state, counter: +state.counter + 1}\r\n        case ACTIONS_TYPE.SET_ERROR:\r\n            return {...state, error: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {CounterReducer} from \"./counterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    counter: CounterReducer\r\n})\r\n\r\nexport const Store = createStore(rootReducer)\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {Store} from \"./BLL/redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={Store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBox\":\"SettingsCounter_settingsBox__3OXdI\",\"inputBox\":\"SettingsCounter_inputBox__7P9bs\",\"inputError\":\"SettingsCounter_inputError__3k8RG\",\"input\":\"SettingsCounter_input__3v5Tx\",\"button\":\"SettingsCounter_button__2Cw8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterBox\":\"Counter_counterBox__2Q6X2\",\"counter\":\"Counter_counter__3lfTF\",\"ErrorH\":\"Counter_ErrorH__cqlG1\",\"Er\":\"Counter_Er__-bX2s\",\"h\":\"Counter_h__4m1GF\",\"counterButton\":\"Counter_counterButton__3typA\",\"cButton\":\"Counter_cButton__3gvvl\"};"],"sourceRoot":""}