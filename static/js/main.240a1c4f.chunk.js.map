{"version":3,"sources":["App.module.css","BLL/actionCreators.ts","Components/Input.tsx","Components/Button.tsx","Components/CounterSettings/SettingsCounter.tsx","Components/CounterSettings/SettingsCounterContainer.tsx","Components/Counter/Counter.tsx","Components/Counter/CounterContainer.tsx","App.tsx","reportWebVitals.ts","BLL/counterReducer.ts","BLL/redux.ts","index.tsx","Components/CounterSettings/SettingsCounter.module.css","Components/Counter/Counter.module.css"],"names":["module","exports","ACTIONS_TYPE","Input","props","className","type","value","onChange","Button","onClick","disabled","title","SettingsCounter","onChangeMin","onChangeMax","disableButton","setValues","min","useSelector","state","counter","valueMin","max","valueMax","error","styles","settingsBox","inputBox","inputError","input","button","setCounterValueAC","SET_COUNTER_VALUE","setErrorAC","SET_ERROR","SettingsCounterContainer","dispatch","useDispatch","useEffect","valueAsString","localStorage","getItem","JSON","parse","SET_MIN_VALUE","SET_MAX_VALUE","setItem","stringify","e","target","minValue","Number","CHANGE_MIN_VALUE","maxValue","CHANGE_MAX_VALUE","Counter","incNumberHandler","resetInc","disable","counterBox","ErrorH","Er","h","counterButton","cButton","CounterContainer","typeString","INC_COUNTER_VALUE","App","s","wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","Store","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.240a1c4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__Jo-Ep\"};","export enum ACTIONS_TYPE {\r\n    CHANGE_MIN_VALUE = 'CHANGE-MIN-VALUE',\r\n    CHANGE_MAX_VALUE = 'CHANGE-MAX-VALUE',\r\n    SET_COUNTER_VALUE = 'SET-COUNTER-VALUE',\r\n    INC_COUNTER_VALUE = 'INC-COUNTER-VALUE',\r\n    SET_MIN_VALUE = 'SET-MIN-VALUE',\r\n    SET_MAX_VALUE = 'SET-MAX-VALUE',\r\n    SET_ERROR = 'SET-ERROR',\r\n}\r\n\r\nexport const changeValueMinAC = (value: number) => {\r\n    return { type: ACTIONS_TYPE.CHANGE_MIN_VALUE, value } as const\r\n}\r\nexport const changeValueMaxAC = (value: number) => {\r\n    return { type: ACTIONS_TYPE.CHANGE_MAX_VALUE, value } as const\r\n}\r\nexport const setCounterValueAC = (value: number | string) => {\r\n    return { type: ACTIONS_TYPE.SET_COUNTER_VALUE, value } as const\r\n}\r\nexport const incCounterValueAC = () => {\r\n    return { type: ACTIONS_TYPE.INC_COUNTER_VALUE } as const\r\n}\r\nexport const setValueMinAC = (value: number) => {\r\n    return { type: ACTIONS_TYPE.SET_MIN_VALUE, value } as const\r\n}\r\nexport const setValueMaxAC = (value: number) => {\r\n    return { type: ACTIONS_TYPE.SET_MAX_VALUE, value } as const\r\n}\r\nexport const setErrorAC = (value: string | boolean) => {\r\n    return { type: ACTIONS_TYPE.SET_ERROR, value } as const\r\n}\r\n\r\n//types\r\nexport type ActionType = ReturnType<typeof changeValueMaxAC>\r\n    | ReturnType<typeof changeValueMinAC>\r\n    | ReturnType<typeof setCounterValueAC>\r\n    | ReturnType<typeof incCounterValueAC>\r\n    | ReturnType<typeof setValueMinAC>\r\n    | ReturnType<typeof setValueMaxAC>\r\n    | ReturnType<typeof setErrorAC>\r\n","import React, { ChangeEvent } from \"react\";\r\n\r\ntype InputPropsType = {\r\n    className: string\r\n    value: number\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n    return (\r\n        <input className={ props.className } type={ \"number\" } value={ props.value }\r\n               onChange={ props.onChange }/>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    className: string\r\n    onClick: () => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n    return (\r\n        <button\r\n            className={ props.className }\r\n            onClick={ props.onClick }\r\n            disabled={ props.disabled }>{ props.title }</button>\r\n    )\r\n}\r\n\r\n","import { Input } from \"../Input\";\r\nimport { Button } from \"../Button\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport styles from './SettingsCounter.module.css'\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../BLL/redux\";\r\n\r\ntype PropsType = {\r\n    setValues: () => void\r\n    onChangeMin: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeMax: (e: ChangeEvent<HTMLInputElement>) => void\r\n    disableButton: boolean\r\n}\r\n\r\nexport const SettingsCounter = (props: PropsType) => {\r\n\r\n    const {\r\n        onChangeMin,\r\n        onChangeMax,\r\n        disableButton,\r\n        setValues,\r\n    } = props\r\n\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n\r\n    return (\r\n        <div className={ styles.settingsBox }>\r\n            <div className={ styles.inputBox }>\r\n                MinValue\r\n                <Input className={ error ? styles.inputError : styles.input }\r\n                       value={ min }\r\n                       onChange={ onChangeMin }/>\r\n            </div>\r\n            <div className={ styles.inputBox }>\r\n                MaxValue\r\n                <Input className={ error ? styles.inputError : styles.input }\r\n                       value={ max }\r\n                       onChange={ onChangeMax }/>\r\n            </div>\r\n            <div>\r\n                <Button title={ 'set' }\r\n                        className={ styles.button }\r\n                        disabled={ disableButton }\r\n                        onClick={ setValues }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { SettingsCounter } from \"./SettingsCounter\";\r\nimport React, { ChangeEvent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    changeValueMaxAC,\r\n    changeValueMinAC,\r\n    setCounterValueAC,\r\n    setErrorAC,\r\n    setValueMaxAC,\r\n    setValueMinAC,\r\n} from \"../../BLL/actionCreators\";\r\nimport { AppStateType } from \"../../BLL/redux\";\r\n\r\n\r\nexport const SettingsCounterContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n\r\n    useEffect(() => {\r\n        const valueAsString = localStorage.getItem('minValue')\r\n        if(valueAsString) {\r\n            const min = JSON.parse(valueAsString)\r\n            dispatch(setValueMinAC(min))\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const valueAsString = localStorage.getItem('maxValue')\r\n        if(valueAsString) {\r\n            const max = JSON.parse(valueAsString)\r\n            dispatch(setValueMaxAC(max))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const setValues = () => {\r\n        localStorage.setItem('minValue', JSON.stringify(min))\r\n        localStorage.setItem('maxValue', JSON.stringify(max))\r\n        dispatch(setCounterValueAC(min))\r\n    }\r\n\r\n    const onChangeMin = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const min = e.target.value\r\n        const minValue = Number(min)\r\n        dispatch(changeValueMinAC(minValue))\r\n        dispatch(setCounterValueAC('Set Value'))\r\n        if(minValue >= max) {\r\n            dispatch(setErrorAC('Incorrect Value'))\r\n        }\r\n        else {\r\n            dispatch(setErrorAC(false))\r\n        }\r\n    }\r\n    const onChangeMax = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const max = e.target.value\r\n        const maxValue = Number(max)\r\n        dispatch(changeValueMaxAC(maxValue))\r\n        dispatch(setCounterValueAC('Set Value'))\r\n        if(maxValue <= min) {\r\n            dispatch(setErrorAC('Incorrect Value'))\r\n        }\r\n        else {\r\n            dispatch(setErrorAC(false))\r\n        }\r\n    }\r\n\r\n    const disableButton = min >= max\r\n\r\n    return <>\r\n        <SettingsCounter setValues={ setValues }\r\n                         onChangeMin={ onChangeMin }\r\n                         onChangeMax={ onChangeMax }\r\n                         disableButton={ disableButton }/>\r\n    </>\r\n}\r\n\r\n","import { Button } from \"../Button\";\r\nimport React from \"react\";\r\nimport styles from './Counter.module.css'\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../BLL/redux\";\r\n\r\ntype PropsType = {\r\n    incNumberHandler: () => void\r\n    resetInc: () => void\r\n    disable: boolean\r\n}\r\n\r\nexport const Counter = (props: PropsType) => {\r\n\r\n    const typeString = 'string'\r\n\r\n    const { incNumberHandler, resetInc, disable } = props\r\n\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n\r\n    const counter = useSelector<AppStateType, number | string>(state => state.counter.counter)\r\n\r\n    return (\r\n        <div className={ styles.counterBox }>\r\n            <div className={ styles.counter }>\r\n                <div>\r\n\r\n                    {\r\n                        error ? <div className={ styles.ErrorH }>{ error }</div>\r\n                            : <div className={ counter >= max ? styles.Er : styles.h }>{ counter }</div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={ styles.counterButton }>\r\n                <Button title={ \"Inc\" }\r\n                        className={ styles.cButton }\r\n                        onClick={ incNumberHandler }\r\n                        disabled={ disable }/>\r\n                <Button title={ \"RESET\" }\r\n                        className={ styles.cButton }\r\n                        onClick={ resetInc }\r\n                        disabled={ !!error || ( typeof ( counter ) === typeString ) }/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { incCounterValueAC, setCounterValueAC } from \"../../BLL/actionCreators\";\r\nimport { Counter } from \"./Counter\";\r\nimport React from \"react\";\r\nimport { AppStateType } from \"../../BLL/redux\";\r\n\r\nexport const CounterContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const counter = useSelector<AppStateType, number | string>(state => state.counter.counter)\r\n\r\n    const min = useSelector<AppStateType, number>(state => state.counter.valueMin)\r\n\r\n    const error = useSelector<AppStateType, boolean | string>(state => state.counter.error)\r\n\r\n    const max = useSelector<AppStateType, number>(state => state.counter.valueMax)\r\n\r\n    const typeString = 'string'\r\n\r\n    const incNumberHandler = () => {\r\n        if(( typeof counter ) !== typeString)\r\n            dispatch(incCounterValueAC())\r\n    }\r\n\r\n    const resetInc = () => {\r\n        if(( typeof counter ) !== typeString)\r\n            dispatch(setCounterValueAC(min))\r\n    }\r\n\r\n    const disabled = !!error || counter === max || ( typeof ( counter ) === typeString )\r\n\r\n\r\n    return <>\r\n        <Counter incNumberHandler={ incNumberHandler }\r\n                 resetInc={ resetInc }\r\n                 disable={ disabled }/>\r\n    </>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport { SettingsCounterContainer } from \"./Components/CounterSettings/SettingsCounterContainer\";\nimport s from './App.module.css'\nimport { CounterContainer } from \"./Components/Counter/CounterContainer\";\n\nfunction App() {\n\n    return (\n        <div className={ s.wrapper }>\n            <SettingsCounterContainer/>\n            <CounterContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ACTIONS_TYPE, ActionType } from \"./actionCreators\";\r\n\r\nconst initialState = {\r\n    counter: 'Press Set' as string | number,\r\n    valueMin: 0,\r\n    valueMax: 0,\r\n    error: '' as string | boolean,\r\n}\r\n\r\nexport const CounterReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.CHANGE_MIN_VALUE:\r\n        case ACTIONS_TYPE.SET_MIN_VALUE:\r\n            return { ...state, valueMin: action.value }\r\n        case ACTIONS_TYPE.CHANGE_MAX_VALUE:\r\n        case ACTIONS_TYPE.SET_MAX_VALUE:\r\n            return { ...state, valueMax: action.value }\r\n        case ACTIONS_TYPE.SET_COUNTER_VALUE:\r\n            return { ...state, counter: action.value }\r\n        case ACTIONS_TYPE.INC_COUNTER_VALUE:\r\n            return { ...state, counter: +state.counter + 1 }\r\n        case ACTIONS_TYPE.SET_ERROR:\r\n            return { ...state, error: action.value }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { CounterReducer } from \"./counterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    counter: CounterReducer,\r\n})\r\n\r\nexport const Store = createStore(rootReducer)\r\n\r\n//types\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {Store} from \"./BLL/redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={Store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsBox\":\"SettingsCounter_settingsBox__3OXdI\",\"inputBox\":\"SettingsCounter_inputBox__7P9bs\",\"inputError\":\"SettingsCounter_inputError__3k8RG\",\"input\":\"SettingsCounter_input__3v5Tx\",\"button\":\"SettingsCounter_button__2Cw8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterBox\":\"Counter_counterBox__2Q6X2\",\"counter\":\"Counter_counter__3lfTF\",\"ErrorH\":\"Counter_ErrorH__cqlG1\",\"Er\":\"Counter_Er__-bX2s\",\"h\":\"Counter_h__4m1GF\",\"counterButton\":\"Counter_counterButton__3typA\",\"cButton\":\"Counter_cButton__3gvvl\"};"],"sourceRoot":""}